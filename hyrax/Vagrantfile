# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

def security_groups(env_var)
  s = ENV[env_var]
  if s.nil?
    # Return some default
    case env_var
    when "AWS_SECURITY_GROUPS" then ["default_vpc_web"]
    else []
    end
  else
    s.split
  end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "centos/7"
  # vagrant plugin install vagrant-env
  config.env.enable
  # https://blog.john-pfeiffer.com/using-vagrant-to-deploy-instances-on-aws/
  config.ssh.pty = true

  # config.ssh.insert_key = false

  # config.vm.synced_folder "data", "/vagrant_data"
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  # config.vm.synced_folder ".", "/vagrant", disabled: true
  # config.vm.synced_folder "local", "/local", type: "virtualbox"

  config.vm.provision "file", source: "config/", destination: "/tmp/"
  config.vm.provision "file", source: "rbenv/", destination: "/tmp/"
  config.vm.provision "file", source: "fits/fits-1.2.0.zip", destination: "/tmp/fits-1.2.0.zip"
  config.vm.provision "file", source: "standalone_scripts/rbenv.sh", destination: "/tmp/rbenv.sh"
  config.vm.provision "file", source: "standalone_scripts/hyrax.sh", destination: "/tmp/hyrax.sh"
  config.vm.provision "shell", inline: <<-SHELL
    sudo chmod +x /tmp/rbenv.sh
    sudo chmod +x /tmp/hyrax.sh
  SHELL

  config.vm.provision "shell", path: "provision_scripts/provision_prereq.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/provision_apache.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/provision_postgres.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/provision_fcrepo.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/provision_solr.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/redis.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/puma.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/sidekiq.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/tmpfiles.sh", privileged: true
  config.vm.provision "shell", path: "provision_scripts/repo_builder.sh", privileged: true

  config.vm.provision "shell", inline: <<-SHELL
    # any extra config, especially anything with ENV
    # eg. maybe add a standard Hyrax admin user
  SHELL

  # Application server
  config.vm.define :hull do |hull|
    hull.vm.hostname = "hull"

    hull.vm.provider :virtualbox do |vb, override|
      vb.memory = "4084"
      vb.cpus = 2

      override.vm.network "forwarded_port", guest: 80, host: 80
      override.vm.network "forwarded_port", guest: 443, host: 443
      override.vm.network "forwarded_port", guest: 3000, host: 3000 # for testing only
      override.vm.network "forwarded_port", guest: 8983, host: 8983
      override.vm.network "forwarded_port", guest: 8080, host: 8080
    end

    hull.vm.provider :aws do |aws, override|
      keypair = "#{ENV['KEYPAIR_NAME']}"
      keypair_filename = "#{ENV['KEYPAIR_FILE']}"
      override.vm.box = "aws_dummy"
      override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
      override.vm.box_check_update = false
      aws.access_key_id = ENV['AWS_ACCESS_KEY']
      aws.secret_access_key = ENV['AWS_SECRET_KEY']
      aws.keypair_name = keypair
      aws.ami = "ami-0d063c6b" # centos7 https://wiki.centos.org/Cloud/AWS
      aws.region = "eu-west-1" # Ireland
      aws.instance_type = "m4.xlarge" # 16GB 4CPU
      # aws.instance_type = "t2.medium" # 4GB 2CPU - for testing
      aws.subnet_id = ENV['AWS_SUBNET']
      aws.security_groups = security_groups('AWS_SECURITY_GROUPS')
      override.ssh.username = "centos"
      override.ssh.private_key_path = "#{keypair_filename}"
      aws.tags = {
        'Name' => 'hull',
      }

      override.vm.provision "shell", inline: <<-SHELL
          sudo sed -i 's/# ServerName localhost/ServerName ENV['AWS_SERVER_IP']/' /etc/httpd/sites-available/hyrax.conf
          # TODO same for .rbenv-vars
          sudo service httpd restart
        SHELL
    end
  end
end
